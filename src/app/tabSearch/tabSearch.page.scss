ion-input {
  --padding-start: 10px;
  //border: 1px solid #ccc; /* Add a border */
  border-radius: 4px; /* Optional: Add rounded corners */
  width: 130px; /* Optional: Make the input take the full width */
  box-sizing: border-box; /* Ensure padding and border are included in the element's total width and height */
  //font-size: 1rem; /* Adjust the font size as needed */
}

.radio-group {
  display: flex;
  flex-wrap: wrap; /* Allow items to wrap to the next line */
  //gap: 5px; /* Add spacing between items */
}

.radio-label {
  display: flex;
  align-items: center;
  gap: 4px; /* Add spacing between the radio button and the label text */
  cursor: pointer; /* Change the cursor to indicate it's clickable */
  padding: 8px; /* Add padding for better touch targets on mobile */
  //border-radius: 4px; /* Optional: Add rounded corners for better UI */
  transition: background-color 0.2s ease; /* Optional: Add hover effect */
}

.radio-label:hover {
  background-color: #f0f0f0; /* Optional: Highlight on hover */
}

.small-button {
  --padding-start: 6px;
  --padding-end: 6px;
  --padding-top: 0px;
  --padding-bottom: 0px;
  font-size: 12px;
  height: 32px;
  margin-left: 4px;
}

/* Responsive adjustment for very small screens */
@media (max-width: 400px) {
  .map-container {  
    width: calc(100% - 7%);     
     aspect-ratio: 1 / 1; /* makes height always equal to width */
    overflow: auto;
    position: relative;
    box-sizing: border-box;
  }
}

// this also never worked!! grrr
//@media (max-width: 400px) {
  // .map-container-google {      
  //   width: 20px;   
  //    aspect-ratio: 1 / 1;
  //   height: 20px; 
  //   max-height: 20px; 
  //   overflow: auto;
  //   position: relative;
  //   box-sizing: border-box;
  // }
//}

// this never worked!! grrr
// google-map {
//   flex: 1; 
//   height: 100%; /* Ensure the google-map component takes the full height of the container */
//   width: 100%; /* Ensure the google-map component takes the full width of the container */
// }

ion-card {
  margin: 4px !important; /* Adjust the margin as needed and add !important */
}

ion-grid {
  padding: 1px !important; /* Adjust the margin as needed and add !important */
}

#contentx {
  display: flex; /* Ensure the row behaves like a flex container */
}

.fixed-width-col {
  max-width: 550px; /* Prevent the first column from growing beyond 550px */
  flex: 0 0 auto; /* Prevent the column from shrinking or growing */
}

ion-col:not(.fixed-width-col) {
  flex: 1; /* Allow the second column to take up the remaining space */
  text-align: left; /* Ensure content is left-aligned */
}

// .checkbox-group {
//   display: flex;
//   gap: 16px;
//   align-items: center;
// }
.checkbox-group {  
  display: flex;
  flex-wrap: wrap;  
  margin: 0px 0px 0px 11px !important;
  gap: 16px;       /* Allows checkboxes to wrap to next line */
  max-width: 100%;         /* Prevents overflow */
  box-sizing: border-box;  /* Includes padding/border in width */  
}


.ion-checkbox-success {
  --checkbox-background: #2dd55b; /* your desired color */
}

.ion-checkbox-success-tint {
  --checkbox-background: #006600; /* your desired color */
}

.ion-checkbox-primary {
  --checkbox-background: #0054e9; /* your desired color */
}

.ion-checkbox-secondary {
  --checkbox-background: #0163aa; /* your desired color */
}

.ion-checkbox-tertiary-tint {
  --checkbox-background: #7045ff; /* your desired color */
}

.ion-checkbox-warning-shade {
  --checkbox-background: #e0ac08; /* your desired color */
}

.ion-checkbox-medium {
  --checkbox-background: #6f6f6f; /* your desired color */
}

.ion-checkbox-medium-shade {
  --checkbox-background: #545454; /* your desired color */
}


.ion-checkbox-danger-tint {
  --checkbox-background: #cb1a27; /* your desired color */
}

 
.my-label-text-wrapper {

   &::part(label)
   {
      margin-inline-start: 5px !important;
   }
}


// did not work (actuall.. its margin-inline-start)
// ::ng-deep label-text-wrapper {
//   margin: 0px 0px 0px -5px !important;
// }




//<div class="label-text-wrapper" part="label"><div class="label-text">Filter options</div></div>

.map-overlay-text {
  position: absolute;
  top: 10px;
  left: 55%;
  transform: translateX(-50%);
  background: rgba(255, 251, 230, 0.95);
  border: 1px solid #ffe082;
  color: #5f4503;
  padding: 8px 16px;
  border-radius: 8px;
  font-size: 1.1em;
  z-index: 10;
  pointer-events: none; /* Allows clicks to pass through to the map */
  display: flex;
  align-items: center;
  box-shadow: 0 2px 8px rgba(0,0,0,0.08);
  opacity: 0.82;
}

/* Add this to tabSearch.page.scss */
.flicker {
  animation: flicker-animation 0.7s linear infinite;
}

@keyframes flicker-animation {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.2; }
}


